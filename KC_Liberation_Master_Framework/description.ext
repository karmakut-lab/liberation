/*
    File: description.ext
    Author: KP Liberation Dev Team - https://github.com/KillahPotatoes
    Date: 2017-10-16
    Last Update: 2020-05-09
    License: MIT License - http://www.opensource.org/licenses/MIT

    Description:
        Information about the author, mission name, respawn and more very general settings.
        This overrides corresponding settings which are made in the sqm via eden editor.

    Reference from where most descriptions are from:
        https://community.bistudio.com/wiki/Description.ext
*/

/*
    ----- General -----
*/

// Gametype and min/max players
class Header {
    gameType = "CTI";
    minPlayers = 1;
    maxPlayers = 100;
};

// Name of Mission author(s) and contributors. Obviously you can only add and not (!) remove someone.
author = "[GREUH] Zbug & McKeewa, KP Liberation Dev Team";


/*
    ----- Mission Selection Screen -----
*/

// Mission name displayed in the mission selection menu.
briefingName = $STR_MISSION_TITLE;

// Path to image which will be displayed when the mission is highlighted on the mission selection screen.
// Image should be .paa format and in 2:1 aspect ratio â€“ ideally 1024x512 (Arma 3).
overviewPicture = "res\KarmaLoading.paa";

// Text to be displayed below the overviewPicture on the mission selection screen
overviewText = "karmakut.com";


/*
    ----- Mission Loading Screen -----
*/

// String (usually mission name) shown during mission loading.
// The string is shown in a slightly larger font above the loadScreen.
onLoadName = $STR_MISSION_TITLE;

// You can define a picture to be shown while the mission is loaded.
// The path is relative to the mission folder.
loadScreen = "res\KarmaLoading.paa";

// Displays a message while the mission is loading below the loadScreen picture.
onLoadMission = "karmakut.com";


/*
    ----- Respawn -----
*/

// Enable or disable the respawn button in the menu for INSTANT and BASE respawn types.
respawnButton = 0;

// Templates are pre-defined scripts called when player dies and respawns. They are defined in an array and can be combined together.
// List of pre-defined variants: https://community.bistudio.com/wiki/Arma_3_Respawn#Official_Templates
respawnTemplates[] = {};

// Additionally, you can define side specific templates. When a side has no unique templates, it will use general respawnTemplates instead.
// respawnTemplatesWest[] = {"MenuInventory"};
// respawnTemplatesEast[] = {"Counter"};
// respawnTemplatesGuer[] = {"Tickets"};
// respawnTemplatesCiv[] = {"Spectator"};
// respawnTemplatesVirtual[] = {};

// Type of Respawn (Default 0 in SP, 1 in MP)
// 0    "NONE"      No respawn
// 1    "BIRD"      Respawn as a seagull
// 2    "INSTANT"   Respawn just where you died.
// 3    "BASE"      Respawn in base. A respawn marker is needed.
// 4    "GROUP"     Respawn in your group. If there is no remaining AI, you will become a seagull.
// 5    "SIDE"      Introduced with Armed Assault version 1.08 Respawn into an AI unit on your side (if there's no AI left, you'll become a seagull).
respawn = 3;

// Set respawn delay in seconds.
respawndelay = 5;

// Show the scoreboard and respawn countdown timer for a player if he is killed with respawn type BASE.
respawnDialog = 0;

// Respawn player when he joins the game. Available only for INSTANT and BASE respawn types. (Default: 0)
// -1 - Dont respawn on start. Don't run respawn script on start.
//  0 - Dont respawn on start. Run respawn script on start.
//  1 - Respawn on start. Run respawn script on start.
respawnOnStart = 0;


/*
    ----- Corpse & Wreck Management -----
*/

// Sets the mode for corpse removal manager.
// 0 = None                 - None of the units are managed by the manager
// 1 = All                  - All units are managed by the manager
// 2 = None_But_Respawned   - Only units that can respawn are managed by the manager
// 3 = All_But_Respawned    - All units are managed by the manager with exception of respawned (opposite to mode 2)
corpseManagerMode = 1;

// Corpse limit before which (<=) corpseRemovalMaxTime applies and after which (>) corpseRemovalMinTime applies.
corpseLimit = 50;

// Remove all bodies that have been dead longer than corpseRemovalMinTime when corpseLimit is reached.
corpseRemovalMinTime = 180;

// Maximum time a corpse can remain on the ground if total number of corpses is equal or under corpseLimit.
corpseRemovalMaxTime = 600;

// Sets the mode for wreck removal manager.
// 0 = None                 - None of the vehicles are managed by the manager
// 1 = All                  - All vehicles are managed by the manager
// 2 = None_But_Respawned   - Only vehicles that can respawn are managed by the manager
// 3 = All_But_Respawned    - All vehicles are managed by the manager with exception of respawned (opposite to mode 2)
wreckManagerMode = 1;

// Vehicle wreck limit before which (<=) wreckRemovalMaxTime applies and after which (>) wreckRemovalMinTime applies.
wreckLimit = 20;

// Remove all wrecks that have existed longer than wreckRemovalMinTime when wreckLimit is breached.
wreckRemovalMinTime = 600;

// Maximum time a wreck can remain on the ground if total number of wrecks is equal or under wreckLimit.
wreckRemovalMaxTime = 1200;

// The minimum distance between corpse or wreck and nearest player before the corpse or wreck is allowed to be removed by the garbage collector.
minPlayerDistance = 50;


/*
    ----- Mission Settings -----
*/

// Allows functions to log to the RPT file.
allowFunctionsLog = 1;

// As a security measure, functions are by default protected against rewriting during mission.
// This restriction does not apply in missions previewed from the editor.
allowFunctionsRecompile = "[0, 1] select (is3DENMultiplayer || is3DEN)";

// Disable specific channels for voice and text communication.
// MOTD and admin say have exception and will show in global.
// 0 Global, 1 Side, 2 Command, 3 Group, 4 Vehicle, 5 Direct, 6 System
disableChannels[] = {0};

// Multiplayer setting that removes all playable units which do not have a human player.
// When AI is disabled, a player logging out will not have AI take control of his character.
disabledAI = 1;

// Disables randomization on certain objects, object types or object kinds in the mission.
disableRandomization[] = {};

// Allows access to the Debug Console outside of the editor during normal gameplay.
// 0 - Default behavior, available only in editor
// 1 - Available in SP and for hosts / logged in admins
// 2 - Available for everyone
enableDebugConsole[] = {"76561198009578451", "76561197999232291", "76561198372265841", "76561198029603889", "76561198308236259", "76561198024729279", "76561197966129199", "76561198010961319", "76561198128972595", "76561198025193393", "76561198035901368", "76561198146698036", "76561198218326732", "76561198043834889", "76561197970792840", "76561198062335506", "76561198060416563", "76561198066834077", "76561198870892912", "76561198202157540", "76561197960548388"};

// Force enable or disable RotorLib flight model.
// 0 - based on player's options
// 1 - enabled (advanced mode)
// 2 - disabled (default flight mode)
forceRotorLibSimulation = 0;

// By default a new player is not auto assigned a free playable slot in the mission lobby in Multiplayer.
// Disable this setting to make him auto assigned to the side with least players.
joinUnassigned = 1;

// When enabled, joining player will join the mission bypassing role selection screen.
// The joinUnassigned param will be set to 1 automatically, so that player receives 1st available role from mission template.
// When leaving such mission, player will go straight back to server browser.
skipLobby = 0;

// Defines if the map is shown after the mission starts.
showMap = 1;

// Enable or disable availability of createVehicleLocal
unsafeCVL = 1;


/*
    ----- Task Settings -----
*/

// Use new 2D markers on the map.
taskManagement_markers2D = 1;

// Use new 3D markers outside of the map by holding default J key.
taskManagement_markers3D = 1;

// Propagate shared tasks to subordinates.
taskManagement_propagate = 1;

// 3D marker maximum draw distance in meters.
// Within this range, unassigned tasks are drawn on screen.
taskManagement_drawDist = 5000;


/*
    ----- Config Includes -----
*/
#include "infiSTAR_AdminMenu.hpp" //add support for infistar

class CfgDebriefing {
    #include "KPLIB_debriefs.hpp"
};

class CfgDiscordRichPresence {
    applicationID="698133766975258664";
    defaultDetails="";
    defaultState="Preparing...";
    defaultLargeImageKey="liberation_logo";
    defaultLargeImageText="KP Liberation";
    defaultSmallImageKey="arma3_logo";
    defaultSmallImageText="Arma 3";
    useTimeElapsed=1;
};

class CfgFunctions {
    #include "CfgFunctions.hpp"
    #include "KP\KPPLM\KPPLM_functions.hpp"
};

class CfgRespawnTemplates {

};

class CfgTaskDescriptions {
    #include "scripts\client\tutorial\CfgTaskDescriptions.hpp"
};

#include "ui\liberation_interface.hpp"
#include "ui\liberation_notifications.hpp"
#include "ui\mission_params.hpp"

#include "GREUH\UI\GREUH_interface.hpp"
#include "KP\KPGUI\KPGUI_defines.hpp"
#include "KP\KPPLM\ui\KPPLM_dialog.hpp"

//ORBAT start HERE 
class CfgORBAT
{
    class KarmaHQ
    {
	    id = 0;
	    idType = 3;
	    side = "West";
        size = "Company";
        //type = "HQ";
	    commander = "Karmakut";
	    commanderRank = "Colonel";
	    text = "Karma Company";
	    textShort = "%1 %3";
        texture = __EVAL(getMissionPath "res\Klogobg.paa");
        insignia = __EVAL(getMissionPath "res\KarmaLoading.paa");
        colorInsignia[] = {1,1,1,1};
        color[] = {1,1,1,1};
	    description = "Karma Company Order of Battle";

        class actualPlat
	    {
	    	id = 3;
	    	idType = 0;
	    	side = "West";
    		size = "Squad";
    		type = "Infantry";
    		commanderRank = "Major";
    		text = "Company Command";
    		textShort = "Assassin 6";
    		description = "Karma Company HQ Element";
    	
            class 1stPlat
            {
                id = 1;
                idType = 0;
                type = "Infantry";
                side = "West";
                size = "Platoon";
                //commander = "Ray";
                commanderRank = "Lieutenant";
                text = "Assassin 1 Command Element";
                textShort = "Assassin 1-6";
                description = "1st Infantry Platoon Command Element";

                class 11
                    {
                        id = 1;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 1 - 1st Infantry Squad";
                        textShort = "Assassin 1-1";
                        description = "Standard Infantry Squad 110SR";
                    };
                class 12
                    {
                        id = 2;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 1 - 2nd Infantry Squad";
                        textShort = "Assassin 1-2";
                        description = "Standard Infantry Squad 120SR";
                    };
                class 13
                    {
                        id = 3;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 1 - 3rd Infantry Squad";
                        textShort = "Assassin 1-3";
                        description = "Standard Infantry Squad 130SR";
                    };
                class 14
                    {
                        id = 4;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 1 - Weapons Squad";
                        textShort = "Assassin 1-4";
                        description = "Infantry Weapons Squad (AA/AT Specialists) 140SR";
                    };
            };

            class 2ndPlat
            {   
                id = 2;
                idType = 0;
                side = "West";
                size = "Platoon";
                type = "Infantry";
                //commander = "Dixon";
                commanderRank = "Lieutenant";
                text = "Assassin 2 Command Element";
                textShort = "Assassin 2-6";
                description = "2nd Platoon Infantry Command Element";

                class 11
                    {
                        id = 1;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 2 - 1st Infantry Squad";
                        textShort = "Assassin 2-1";
                        description = "Standard Infantry Squad 210SR";
                    };
                class 12
                    {
                        id = 2;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 2 - 2nd Infantry Squad";
                        textShort = "Assassin 2-2";
                        description = "Standard Infantry Squad 220SR";
                    };
                class 13
                    {
                        id = 3;
                        idType = 0;
                        type = "Infantry";
                        side = "West";
                        size = "Squad";
                        //commander = "Ray";
                        commanderRank = "Sergeant";
                        text = "Assassin 2 - Weapons Squad";
                        textShort = "Assassin 2-3";
                        description = "Infantry Weapons Squad (AA/AT Specialists) 230SR";
                    };
            };


            class Phantom
            {
                id = 4;
                idType = 0;
                side = "West";
                size = "Squad";
                type = "Infantry";
                //commander = "Nichols";
                commanderRank = "Sergeant";
                text = "Phantom 1 Observation Team";
                textShort = "Phantom 1";
                description = "Long Range Recon and Forward Observation";
            };

            class Orge
            {
            id = 0;
	    	idType = 0;
	    	side = "West";
    		size = "Squad";
    		type = "Cavalry";
    		commanderRank = "Corporal";
    		text = "Company Engineers";
    		textShort = "Orge";
    		description = "Ground Logistics, Transport, and EOD SR330";
            };

        };

        class hha
        {
            id = 0;
	    	idType = 0;
	    	side = "West";
    		size = "Squad";
    		type = "Armored";
    		commanderRank = "Captain";
    		text = "Hellhound Command Element";
    		textShort = "Hellhound 3-6";
    		description = "3rd Armored Platoon Command Element";

            class hh1
            {
                id = 1;
	    	    idType = 0;
                side = "West";
                size = "Squadron";
                type = "Armored";
                commanderRank = "Captain";
                text = "Hellhound 3 - 1st Squad";
                textShort = "Hellhound 3-1";
                description = "Armored Squad SR310";
            };
            class hh2
            {
                id = 2;
	    	    idType = 0;
                side = "West";
                size = "Squadron";
                type = "Armored";
                commanderRank = "Captain";
                text = "Hellhound 3 - 2nd Squad";
                textShort = "Hellhound 3-2";
                description = "Armored Squad SR320";
            };
        };

        class airsup
        {
            id = 0;
	    	idType = 0;
	    	side = "West";
    		size = "Troop";
    		type = "Recon";
    		commanderRank = "Captain";
    		text = "JTAC";
    		textShort = "Joint Terminal Attack Controller";
    		description = "Company JTAC";
            
            class Stalker
            {
                id = 0;
                idType = 0;
                side = "West";
                size = "Squadron";
                type = "Helicopter";
                commanderRank = "Captain";
                text = "Rotary Transport/Logi Flight";
                textShort = "Stalker";
                description = "LR70";
            };

            class banshee
            {
                id = 0;
                idType = 0;
                side = "West";
                size = "Squadron";
                type = "Helicopter";
                commanderRank = "Captain";
                text = "Rotary CASEVAC Flight";
                textShort = "Banshee";
                description = "LR70 / EMR:80";
            };

            class Demon
            {
                id = 0;
                idType = 0;
                side = "West";
                size = "Squadron";
                type = "Helicopter";
                commanderRank = "Captain";
                text = "Rotary CAS Flight";
                textShort = "Demon";
                description = "LR70";
            };

            class Reaper
            {
                id = 0;
                idType = 0;
                side = "West";
                size = "Squadron";
                type = "Fighter";
                commanderRank = "Lieutenant";
                text = "Fixed Wing Flight";
                textShort = "Reaper";
                description = "LR70";
            };

            class Savage
            {
                id = 0;
                idType = 0;
                side = "West";
                size = "Squadron";
                type = "Artillery";
                commanderRank = "Sergeant";
                text = "Arty/Indirect fire";
                textShort = "Savage";
                description = "LR40";
            };
        };

    };
};
//ORBAT END